{"version":3,"file":"ts-functional-requirements-CU9GBHK8.js","sources":["../../../pages/ts-functional-requirements.mdx"],"sourcesContent":["# 3. Functional Requirements\n\nThis section details the specific functions the **Web Application Postprocessor** must perform, focusing on user interaction, data processing logic within the application, and data presentation.\n\n## 3.1. User Authentication and Session Management\n\n### 3.1.1. User Login\n* **Description:** Allow authenticated users to log into the web application to access its features.\n* **Input:** Username/Email, Password.\n* **Processing:** Send credentials to Medical System API authentication endpoint. If successful, receive and securely store an authentication token (e.g., JWT).\n* **Output:** Redirect to application dashboard on success; display error message for invalid credentials.\n\n### 3.1.2. User Logout\n* **Description:** Allow users to securely log out of the application, invalidating their session.\n* **Input:** User action (e.g., clicking \"Logout\" button).\n* **Processing:** Clear locally stored authentication token; optionally notify Medical System API to invalidate session.\n* **Output:** Redirect to login page.\n\n## 3.2. Data Retrieval and Display\n\n### 3.2.1. Display Patient List\n* **Description:** Retrieve and display a paginated list of patients from the Medical System API.\n* **Input:** User navigation to \"Patients\" section; optional search/filter parameters.\n* **Processing:** Fetch patient data from `/api/patients` endpoint. Render data in a sortable and filterable table.\n* **Output:** Table displaying patient name, ID, date of birth, and other relevant demographics.\n\n### 3.2.2. View Individual Patient Data\n* **Description:** Display detailed medical records and associated data for a selected patient.\n* **Input:** User selection of a patient from the list or direct access via patient ID.\n* **Processing:** Fetch detailed patient data from `/api/patients/{id}` and medical records from `/api/patients/{id}/records`. Render data in a structured view (e.g., tabs for demographics, appointments, medical history).\n* **Output:** Comprehensive view of selected patient's information.\n\n## 3.3. Data Post-processing and Analysis\n\n### 3.3.1. Initiate Data Post-processing\n* **Description:** Allow users to select specific medical data sets for client-side post-processing.\n* **Input:** User selection of data points or a date range; selection of a specific post-processing algorithm (e.g., calculate average, detect outliers).\n* **Processing:** Fetch raw data from Medical System API. Apply selected client-side algorithm to the retrieved data.\n* **Output:** Processed data ready for visualization or display.\n\n### 3.3.2. Visualize Processed Data\n* **Description:** Display the results of post-processed data using interactive charts and graphs.\n* **Input:** Processed data from 3.3.1.\n* **Processing:** Render data using a charting library (e.g., Chart.js, Recharts) in appropriate visual formats (e.g., line charts, bar graphs, scatter plots).\n* **Output:** Interactive data visualization.\n\n### 3.3.3. Data Filtering and Sorting\n* **Description:** Enable users to filter and sort displayed data dynamically without re-fetching from the API if data is already loaded.\n* **Input:** User input (e.g., typing in a search box, clicking column headers).\n* **Processing:** Apply filtering/sorting logic to the current dataset displayed in the UI.\n* **Output:** Updated display of filtered/sorted data.\n\n## 3.4. Data Export\n\n### 3.4.1. Export Processed Data\n* **Description:** Allow users to export displayed or processed data into common formats.\n* **Input:** User action (e.g., clicking \"Export to CSV/PDF\"), selection of data range/type.\n* **Processing:** Convert the current dataset or processed results into the specified format (CSV, JSON, or trigger PDF generation).\n* **Output:** Downloadable file in the selected format.\n"],"names":["_jsx","_components"],"mappings":"6iDAAE,SAAA;cAEF,SAAA,CAAA,mDAAAA,MAAAC,EAAA,OAAA,CAAkD,SAAA,+BAA+B,CAAA,EAAA,mHAAA;iEAE9E,SAAA;kCAEC,SAAA;;yCACA,SAAA,cAAc,CAAA,EAAA,oFAAA;yCACd,SAAA,QAAQ,CAAA,EAAA,4BAAA;yCACR,SAAA,aAAa,CAAA,EAAA,iJAAA;yCACb,SAAA,SAAS,CAAA,EAAA,+FAAA;;mCAET,SAAA;;yCACA,SAAA,cAAc,CAAA,EAAA,kFAAA;yCACd,SAAA,QAAQ,CAAA,EAAA,gDAAA;yCACR,SAAA,aAAa,CAAA,EAAA,yGAAA;yCACb,SAAA,SAAS,CAAA,EAAA,0BAAA;;iDAEV,SAAA;4CAEC,SAAA;;yCACA,SAAA,cAAc,CAAA,EAAA,iFAAA;yCACd,SAAA,QAAQ,CAAA,EAAA,4EAAA;yCACR,SAAA,aAAa,CAAA,EAAA,4BAAAD,MAAAC,EAAA,KAAA,eAAyB,SAAA,eAAe,CAAA,EAAA,4DAAA;yCACrD,SAAA,SAAS,CAAA,EAAA,qFAAA;;oDAET,SAAA;;yCACA,SAAA,cAAc,CAAA,EAAA,+EAAA;yCACd,SAAA,QAAQ,CAAA,EAAA,6EAAA;yCACR,SAAA,aAAa,CAAA,EAAA,qCAAAD,MAAAC,EAAA,KAAA,eAAkC,SAAA,oBAAoB,CAAA,EAAA,6BAAAD,MAAAC,EAAA,KAAA,eAA0B,SAAA,4BAA4B,CAAA,EAAA,kGAAA;yCACzH,SAAA,SAAS,CAAA,EAAA,wDAAA;;wDAEV,SAAA;qDAEC,SAAA;;yCACA,SAAA,cAAc,CAAA,EAAA,oFAAA;yCACd,SAAA,QAAQ,CAAA,EAAA,+IAAA;yCACR,SAAA,aAAa,CAAA,EAAA,sGAAA;yCACb,SAAA,SAAS,CAAA,EAAA,qDAAA;;gDAET,SAAA;;yCACA,SAAA,cAAc,CAAA,EAAA,kFAAA;yCACd,SAAA,QAAQ,CAAA,EAAA,6BAAA;yCACR,SAAA,aAAa,CAAA,EAAA,gJAAA;yCACb,SAAA,SAAS,CAAA,EAAA,kCAAA;;kDAET,SAAA;;yCACA,SAAA,cAAc,CAAA,EAAA,yHAAA;yCACd,SAAA,QAAQ,CAAA,EAAA,sEAAA;yCACR,SAAA,aAAa,CAAA,EAAA,4EAAA;yCACb,SAAA,SAAS,CAAA,EAAA,2CAAA;;kCAEV,SAAA;6CAEC,SAAA;;yCACA,SAAA,cAAc,CAAA,EAAA,yEAAA;yCACd,SAAA,QAAQ,CAAA,EAAA,kFAAA;yCACR,SAAA,aAAa,CAAA,EAAA,qHAAA;yCACb,SAAA,SAAS,CAAA,EAAA,4CAAA;"}